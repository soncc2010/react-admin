/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const AntAlert: typeof import('antd')['Alert']
  const AntApp: typeof import('antd')['App']
  const AntAvatar: typeof import('antd')['Avatar']
  const AntBreadcrumb: typeof import('antd')['Breadcrumb']
  const AntButton: typeof import('antd')['Button']
  const AntCard: typeof import('antd')['Card']
  const AntCheckbox: typeof import('antd')['Checkbox']
  const AntCol: typeof import('antd')['Col']
  const AntCollapse: typeof import('antd')['Collapse']
  const AntDatePicker: typeof import('antd')['DatePicker']
  const AntDescriptions: typeof import('antd')['Descriptions']
  const AntDropdown: typeof import('antd')['Dropdown']
  const AntFlex: typeof import('antd')['Flex']
  const AntForm: typeof import('antd')['Form']
  const AntImage: typeof import('antd')['Image']
  const AntInput: typeof import('antd')['Input']
  const AntInputNumber: typeof import('antd')['InputNumber']
  const AntLayout: typeof import('antd')['Layout']
  const AntMenu: typeof import('antd')['Menu']
  const AntModal: typeof import('antd')['Modal']
  const AntPagination: typeof import('antd')['Pagination']
  const AntRow: typeof import('antd')['Row']
  const AntSelect: typeof import('antd')['Select']
  const AntSkeleton: typeof import('antd')['Skeleton']
  const AntSpace: typeof import('antd')['Space']
  const AntSpin: typeof import('antd')['Spin']
  const AntTable: typeof import('antd')['Table']
  const AntTag: typeof import('antd')['Tag']
  const AntTypography: typeof import('antd')['Typography']
  const AntUpload: typeof import('antd')['Upload']
  const ArrowDownIcon: typeof import('@phosphor-icons/react')['ArrowDown']
  const ArrowUpIcon: typeof import('@phosphor-icons/react')['ArrowUp']
  const BasketIcon: typeof import('@phosphor-icons/react')['Basket']
  const Breadcrumb: typeof import('../shared/components')['Breadcrumb']
  const ChartLineUpIcon: typeof import('@phosphor-icons/react')['ChartLineUp']
  const ConfigProvider: typeof import('antd')['ConfigProvider']
  const Controller: typeof import('react-hook-form')['Controller']
  const Editor: typeof import('../shared/components')['Editor']
  const EnvelopeIcon: typeof import('@phosphor-icons/react')['Envelope']
  const ExportIcon: typeof import('@phosphor-icons/react')['Export']
  const EyeIcon: typeof import('@phosphor-icons/react')['Eye']
  const FloppyDiskIcon: typeof import('@phosphor-icons/react')['FloppyDisk']
  const FormProvider: typeof import('react-hook-form')['FormProvider']
  const GearIcon: typeof import('@phosphor-icons/react')['Gear']
  const Head: typeof import('../shared/components')['Head']
  const Helmet: typeof import('react-helmet-async')['Helmet']
  const HelmetProvider: typeof import('react-helmet-async')['HelmetProvider']
  const IdentificationBadgeIcon: typeof import('@phosphor-icons/react')['IdentificationBadge']
  const Input: typeof import('../shared/components')['Input']
  const InputNumber: typeof import('../shared/components')['InputNumber']
  const KeyIcon: typeof import('@phosphor-icons/react')['Key']
  const Link: typeof import('react-router-dom')['Link']
  const LockKeyIcon: typeof import('@phosphor-icons/react')['LockKey']
  const MagnifyingGlassIcon: typeof import('@phosphor-icons/react')['MagnifyingGlass']
  const MoneyIcon: typeof import('@phosphor-icons/react')['Money']
  const NavLink: typeof import('react-router-dom')['NavLink']
  const Navigate: typeof import('react-router-dom')['Navigate']
  const Outlet: typeof import('react-router-dom')['Outlet']
  const PackageIcon: typeof import('@phosphor-icons/react')['Package']
  const PencilIcon: typeof import('@phosphor-icons/react')['Pencil']
  const PlusIcon: typeof import('@phosphor-icons/react')['Plus']
  const PowerIcon: typeof import('@phosphor-icons/react')['Power']
  const QueryClient: typeof import('@tanstack/react-query')['QueryClient']
  const QueryClientProvider: typeof import('@tanstack/react-query')['QueryClientProvider']
  const RouterProvider: typeof import('react-router-dom')['RouterProvider']
  const Select: typeof import('../shared/components')['Select']
  const ShoppingCartIcon: typeof import('@phosphor-icons/react')['ShoppingCart']
  const SquaresFourIcon: typeof import('@phosphor-icons/react')['SquaresFour']
  const StrictMode: typeof import('react')['StrictMode']
  const Suspense: typeof import('react')['Suspense']
  const Trans: typeof import('react-i18next')['Trans']
  const Translation: typeof import('react-i18next')['Translation']
  const TrashIcon: typeof import('@phosphor-icons/react')['Trash']
  const Upload: typeof import('../shared/components')['Upload']
  const UserIcon: typeof import('@phosphor-icons/react')['User']
  const UsersIcon: typeof import('@phosphor-icons/react')['Users']
  const WarningCircleIcon: typeof import('@phosphor-icons/react')['WarningCircle']
  const XIcon: typeof import('@phosphor-icons/react')['X']
  const apiRequest: typeof import('../shared/utils')['apiRequest']
  const cloneElement: typeof import('react')['cloneElement']
  const create: typeof import('zustand')['create']
  const createBrowserRouter: typeof import('react-router-dom')['createBrowserRouter']
  const createContext: typeof import('react')['createContext']
  const createRef: typeof import('react')['createRef']
  const filter: typeof import('lodash-es')['filter']
  const find: typeof import('lodash-es')['find']
  const flatMap: typeof import('lodash-es')['flatMap']
  const formatCurrency: typeof import('../shared/utils')['formatCurrency']
  const formatDate: typeof import('../shared/utils')['formatDate']
  const formatNumber: typeof import('../shared/utils')['formatNumber']
  const forwardRef: typeof import('react')['forwardRef']
  const get: typeof import('lodash-es')['get']
  const head: typeof import('lodash-es')['head']
  const i18nInstance: typeof import('i18next')['default']
  const includes: typeof import('lodash-es')['includes']
  const initReactI18next: typeof import('react-i18next')['initReactI18next']
  const isArray: typeof import('lodash-es')['isArray']
  const isEmpty: typeof import('lodash-es')['isEmpty']
  const lazy: typeof import('react')['lazy']
  const lowerCase: typeof import('lodash-es')['lowerCase']
  const map: typeof import('lodash-es')['map']
  const matchRoutes: typeof import('react-router-dom')['matchRoutes']
  const memo: typeof import('react')['memo']
  const notification: typeof import('antd')['notification']
  const size: typeof import('lodash-es')['size']
  const startTransition: typeof import('react')['startTransition']
  const sumBy: typeof import('lodash-es')['sumBy']
  const uniqueId: typeof import('lodash-es')['uniqueId']
  const updateLocale: typeof import('i18next')['changeLanguage']
  const useBeforeUnload: typeof import('react-router-dom')['useBeforeUnload']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useController: typeof import('react-hook-form')['useController']
  const useCookie: typeof import('../shared/custom-hooks')['useCookie']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useFieldArray: typeof import('react-hook-form')['useFieldArray']
  const useForm: typeof import('react-hook-form')['useForm']
  const useFormContext: typeof import('react-hook-form')['useFormContext']
  const useI18n: typeof import('i18next')['use']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInfiniteQuery: typeof import('@tanstack/react-query')['useInfiniteQuery']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLocation: typeof import('react-router-dom')['useLocation']
  const useMatch: typeof import('react-router-dom')['useMatch']
  const useMemo: typeof import('react')['useMemo']
  const useMutation: typeof import('@tanstack/react-query')['useMutation']
  const useNavigate: typeof import('react-router-dom')['useNavigate']
  const useOutletContext: typeof import('react-router-dom')['useOutletContext']
  const useParams: typeof import('react-router-dom')['useParams']
  const useQueries: typeof import('@tanstack/react-query')['useQueries']
  const useQuery: typeof import('@tanstack/react-query')['useQuery']
  const useQueryClient: typeof import('@tanstack/react-query')['useQueryClient']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useSearchParams: typeof import('react-router-dom')['useSearchParams']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useToast: typeof import('../shared/custom-hooks')['useToast']
  const useTransition: typeof import('react')['useTransition']
  const useTranslation: typeof import('react-i18next')['useTranslation']
  const useWatch: typeof import('react-hook-form')['useWatch']
  const z: typeof import('zod')['z']
  const zodResolver: typeof import('@hookform/resolvers/zod')['zodResolver']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { StateCreator } from 'zustand'
  import('zustand')
  // @ts-ignore
  export type { MenuProps, ThemeConfig, FormProps, BreadcrumbItemType, TableProps, TablePaginationConfig, UploadFile, UploadProps, SelectProps, UseFormRegister, DescriptionsProps, GetProp } from 'antd'
  import('antd')
  // @ts-ignore
  export type { RouteObject } from 'react-router-dom'
  import('react-router-dom')
  // @ts-ignore
  export type { FC, ReactNode, ComponentType, ReactElement, ChangeEvent } from 'react'
  import('react')
  // @ts-ignore
  export type { FieldErrors, Control, RegisterOptions, UseFormGetValues, UseFormReturn, FieldValues, FieldArrayWithId, UseFormSetValue, UseFormSetError, UseFormHandleSubmit, Path } from 'react-hook-form'
  import('react-hook-form')
  // @ts-ignore
  export type { UseMutationResult } from '@tanstack/react-query'
  import('@tanstack/react-query')
}
